cmake_minimum_required(VERSION 2.8.7)

# If there is already a target called ncode_common someone has already
# added this project. Will ignore.
if(TARGET ncode_common)
    return()
endif(TARGET ncode_common)

project(NCodeCommon)
option(NCODE_DISABLE_TESTS "If tests should be compiled or not" ON)
option(NCODE_DISABLE_BENCHMARKS "If benchmarks should be compiled or not" ON)
option(NCODE_DEBUG "A debug build" OFF)
option(NCODE_ASAN "Compile with ASAN on" OFF)
option(NCODE_TSAN "Compile with TSAN on" OFF)

set(NCODE_BASE_FLAGS "-g -std=c++11 -pedantic-errors -Winit-self -Woverloaded-virtual -Wuninitialized -Wall -Wextra -fno-exceptions")
set(NCODE_BASE_LD_FLAGS "")
if (NCODE_ASAN)
   set(NCODE_BASE_FLAGS "${NCODE_BASE_FLAGS} -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls")
   set(NCODE_BASE_LD_FLAGS "${NCODE_BASE_LD_FLAGS} -fsanitize=address")
endif()
if (NCODE_TSAN)
   set(NCODE_BASE_FLAGS "${NCODE_BASE_FLAGS} -fsanitize=thread -fno-omit-frame-pointer -fno-optimize-sibling-calls")
   set(NCODE_BASE_LD_FLAGS "${NCODE_BASE_LD_FLAGS} -fsanitize=thread")
endif()

if (NCODE_DEBUG)
  set(NCODE_BASE_FLAGS "${NCODE_BASE_FLAGS} -O0 -fno-omit-frame-pointer")
else()
  set(NCODE_BASE_FLAGS "${NCODE_BASE_FLAGS} -O3 -march=native -DNDEBUG")   
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${NCODE_BASE_FLAGS}")
set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} ${NCODE_BASE_LD_FLAGS}")

if (NOT NCODE_DISABLE_TESTS)
   include(CTest)
   add_subdirectory(external/gtest)
   macro(add_test_exec name src_file deps)
     add_executable(${name} ${src_file})
     target_link_libraries(${name} gtest gmock_main ${deps} ${ARGN})
     add_test(NAME ${name} COMMAND ${name})
   endmacro(add_test_exec)
endif()

set(NCODE_COMMON_HEADER_FILES src/common.h src/substitute.h src/logging.h src/file.h src/stringpiece.h src/strutil.h src/map_util.h src/stl_util.h src/event_queue.h src/free_list.h src/packer.h src/ptr_queue.h src/lru_cache.h src/perfect_hash.h src/alphanum.h src/md5.h src/stats.h)
add_library(ncode_common STATIC src/common.cc src/substitute.cc src/logging.cc src/file.cc src/stringpiece.cc src/strutil.cc src/event_queue.cc src/packer.cc src/md5.cc src/stats.cc ${NCODE_COMMON_HEADER_FILES})

set_property(SOURCE src/stringpiece_test.cc APPEND_STRING PROPERTY COMPILE_FLAGS "-Wno-conversion-null -Wno-sign-compare")
set_property(SOURCE src/strutil_test.cc APPEND_STRING PROPERTY COMPILE_FLAGS "-Wno-sign-compare")

if (NOT NCODE_DISABLE_TESTS)
   add_test_exec(stringpiece_test src/stringpiece_test.cc ncode_common)
   add_test_exec(logging_test src/logging_test.cc ncode_common)
   add_test_exec(common_test src/common_test.cc ncode_common)
   add_test_exec(strutil_test src/strutil_test.cc ncode_common)
   add_test_exec(event_queue_test src/event_queue_test.cc ncode_common)
   add_test_exec(free_list_test src/free_list_test.cc ncode_common)
   add_test_exec(packer_test src/packer_test.cc ncode_common)
   add_test_exec(ptr_queue_test src/ptr_queue_test.cc ncode_common)
   add_test_exec(circular_array_test src/circular_array_test.cc ncode_common)
   add_test_exec(lru_cache_test src/lru_cache_test.cc ncode_common)
   add_test_exec(thread_runner_test src/thread_runner_test.cc ncode_common)
   add_test_exec(perfect_hash_test src/perfect_hash_test.cc ncode_common)
   add_test_exec(alphanum_test src/alphanum_test.cc ncode_common)
   add_test_exec(stats_test src/stats_test.cc ncode_common)
endif()

if (NOT NCODE_DISABLE_BENCHMARKS)
   add_executable(perfect_hash_benchmark src/perfect_hash_benchmark.cc)
   target_link_libraries(perfect_hash_benchmark ncode_common)

   add_executable(free_list_benchmark src/free_list_benchmark.cc)
   target_link_libraries(free_list_benchmark ncode_common)
endif()
